labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 20, face = "bold"),
axis.title=element_text(size=12))
my_plot
#library(wesanderson)
#ldpal <- wes_palette("FantasticFox1", n =4, type = 'continuous')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 16, face = "bold"),
axis.title=element_text(size=12))
my_plot
legend.text = element_text(size = 12)) +
scale_fill_brewer(palette = 'Spectral')
legend.text = element_text(size = 12)) +
scale_fill_manual(palette = 'Spectral')
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5, color = 'Spectral') +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 142)
legend.text = element_text(size = 12))
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5, color = 'Spectral') +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 142),
legend.text = element_text(size = 12))
map_plot
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 142),
legend.text = element_text(size = 12)) +
scale_fill_continuous('Spectral')
map_plot
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 142),
legend.text = element_text(size = 12)) +
scale_color_brewer('Spectral')
map_plot
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 142),
legend.text = element_text(size = 12)) +
scale_colour_brewer(palette = 'Dark2')
map_plot
?n_distinct
n_distinct(top4_df$PdDistrict)
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 142),
legend.text = element_text(size = 12)) +
scale_colour_brewer(palette = 'Spectral')
map_plot
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.5) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12)) +
scale_colour_brewer(palette = 'Spectral')
map_plot
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
scale_fill_brewer(palette = 'Spectral')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)) +
scale_fill_brewer(palette = 'Spectral')
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.1) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12)) +
scale_colour_brewer(palette = 'Spectral')
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 9)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.09) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12)) +
scale_colour_brewer(palette = 'Spectral')
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
#library(wesanderson)
#ldpal <- wes_palette("FantasticFox1", n =4, type = 'continuous')
my_plot <- ggplot(df_4, aes(Category, color = Category)) +
geom_bar(stat='count') +
labs(x = 'Category of crime',
y = 'Aggregated count of crimes') +
ggtitle('Crime occurrences for top 4 crimes') +
theme(plot.title = element_text(size = 16),
axis.title=element_text(size=12))
my_plot
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 7)) +
scale_fill_brewer(palette = 'Spectral')
map_plot <- top4_df %>%
ggplot(aes(x = X, y = Y, color = PdDistrict)) +
geom_point(size = 0.07) +
labs(title = 'Crime Density Across Neighborhoods',
x = "Longitude",
y = "Latitude") +
guides(color =guide_legend(title = "Neighborhood",
size = 12,
override.aes = list(size=5))) +
theme(title = element_text(size = 16),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
legend.text = element_text(size = 12)) +
scale_colour_brewer(palette = 'Spectral')
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 6)) +
scale_fill_brewer(palette = 'Spectral')
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 6)) +
scale_fill_brewer(palette = 'Spectral') +
coord_flip()
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 6)) +
scale_fill_brewer(palette = 'Spectral')
grid.arrange(my_plot, map_plot, bar_chart, ncol = 2, nrow = 2)
library(tidyverse)
library(lubridate)
library(gridExtra)
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
neighborhood_freq
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>%
reorder(Var1, -neighborhood_freq$Freq)
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>% reorder(Var1, -neighborhood_freq$Freq)
?reorder
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>% reorder(Var1, -neighborhood_freq$Freq)
neighborhood_freq <- reorder(Var1, -neighborhood_freq$Freq)
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
neighborhood_freq <- reorder(Var1, -neighborhood_freq$Freq)
neighborhood_freq
neighborhood_freq <- reorder(neighborhood_freq$Var1, -neighborhood_freq$Freq)
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
neighborhood_freq
class(neighborhood_freq)
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict))
neighborhood_freq
?fct_reorder
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>%
fct_reorder(Var1, Freq)
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>%
fct_reorder(as.factor(Var1), Freq)
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>%
mutate(Var1 = fct_reorder(as.factor(Var1), Freq))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = reorder(neighborhood, -neighborhood_freq$Freq), y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 6)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
neighborhood_freq
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>%
mutate(Var1 = fct_reorder(as.factor(Var1), Freq))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = neighborhood, y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 6)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
neighborhood_freq
?fct_reorder
# create a frequency table for the crimes in each neighborhood
neighborhood_freq <- as.data.frame(table(top4_df$PdDistrict)) %>%
mutate(Var1 = fct_reorder(as.factor(Var1), Freq, .desc = TRUE))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
# make the frequency chart for crime over neighborhood
# note: static plot is counts of all 4 crimes together for each neighborhood
bar_chart <- neighborhood_freq %>%
ggplot(aes(x = neighborhood, y = Freq, fill = neighborhood)) +
geom_col() +
labs(title = "Distribution of Crime Reports Across Neighborhood",
x = "Neighborhood",
y = 'Count of Report') +
theme(legend.position = 'none',
title = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 6)) +
scale_fill_brewer(palette = 'Spectral')
bar_chart
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
library(dash)
library(dashCoreComponents)
library(dashHtmlComponents)
library(dashTable)
library(tidyverse)
library(plotly)
library(anytime)
library(lubridate)
library(dplyr)
library(wesanderson)
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
df$Category %>% unique()
df$Category %>% unique() %>% count()
df$Category %>% unique() %>% length()
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category == c('ASSAULT') |
Category == 'LARCENY/THEFT' |
Category == 'VANDALISM' |
Category == 'VEHICLE THEFT')
top4_df$PdDistrict
as.data.frame(table(data$PdDistrict)) %>%
mutate(Var1 = fct_reorder(as.factor(Var1), Freq, .desc = TRUE))
colnames(neighborhood_freq) <- c('neighborhood', 'Freq')
as.data.frame(table(data$PdDistrict)) %>%
mutate(Var1 = fct_reorder(as.factor(Var1), Freq, .desc = TRUE))
as.data.frame(tabletop4_df$PdDistrict)) %>%
mutate(Var1 = fct_reorder(as.factor(Var1), Freq, .desc = TRUE))
as.data.frame(tabletop4_df$PdDistrict))
as.data.frame(table(data$PdDistrict))
as.data.frame(table(top4_df$PdDistrict))
hourMarks <- map(seq(0, 23, 1))
hourMarks <- seq(0, 23, 1)
# make time plot
make_tp <- function(data = top4_df){
n_unique <- data$Category %>% unique() %>% length()
time_plot <- ggplot(data, aes(Category)) +
geom_bar(stat='count', aes(fill=Category)) +
labs(x = 'Crime Type',
y = 'Aggregated Crime Count') +
ggtitle('Crime Occurrences for Top 4 Crimes') +
theme(plot.title = element_text(size = 14),
axis.title=element_text(size=12),
legend.position = 'none') +
scale_fill_manual(values = wes_palette("Darjeeling1", n = n_unique))
ggplotly(time_plot)
}
seq(0, 23, 1)
list(123, 256)
list(1, 2)
a <- list(1, 2)
a[[1]]
a[[2]]
length(top4_df)
top4_df
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# create hour column
df <- separate(df, 'Date', 'Date', sep = " ")
df$Date <- mdy(df$Date)
df$Hour <- hm(df$Time) %>% hour()
# filter the data to the top 4 crimes
top4_df <- df %>%
drop_na() %>%
filter(Category %in% c("ASSAULT", "LARCENY/THEFT", "VEHICLE THEFT", "VANDALISM"))
length(top4_df)
df %>%
drop_na() %>%
filter(Category %in% c("ASSAULT", "LARCENY/THEFT", "VEHICLE THEFT", "VANDALISM"))
df %>%
drop_na() %>%
filter(Category %in% c("ASSAULT", "LARCENY/THEFT", "VEHICLE THEFT", "VANDALISM"))
df$Category
df %>%
drop_na()
lapply(unique(top4_df$Hour), as.character)
top4_df
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# create hour column
df <- separate(df, 'Date', 'Date', sep = " ")
df$Date <- mdy(df$Date)
df$Hour <- hm(df$Time) %>% hour()
# filter the data to the top 4 crimes
top4_df <- df %>%
filter(Category %in% c("ASSAULT", "LARCENY/THEFT", "VEHICLE THEFT", "VANDALISM"))
lapply(unique(top4_df$Hour), as.character)
top4_df$Hour
df$Date
df$Hour
df$Time
hm(df$Time)
hms(df$Time)
hms(df$Time) %>% hour()
levels(top4_df$Category)
# load in the crime data
df <- read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')
# create hour column
df <- separate(df, 'Date', 'Date', sep = " ")
df$Date <- mdy(df$Date)
df$Hour <- hms(df$Time) %>% hour()
# filter the data to the top 4 crimes
top4_df <- df %>%
filter(Category %in% c("ASSAULT", "LARCENY/THEFT", "VEHICLE THEFT", "VANDALISM"))
levels(top4_df$Category)
top4_df
top4_df$Category
top4_df$Category %>% levels()
top4_df$Category %>% as.factor()
top4_df$Category %>% as.factor() %>% levels()
